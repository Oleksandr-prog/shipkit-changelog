package org.shipkit.changelog;

import java.util.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.stream.Collectors;

import static org.shipkit.changelog.DateUtil.formatDate;

public class ChangelogFormat {

    public static String formatChangelog(Set<String> contributors, Collection<Improvement> improvements, int commitCount,
                                         final String version, final String newRev, final String previousRev,
                                         final String gitHubRepoUrl) {
        String template = "@header@\n" +
                "\n" +
                "#### @version@\n" +
                " - @date@ - [@commitCount@ commit(s)](@repoUrl@/compare/@previousRev@...@newRev@) by @contributors@\n" +
                "@improvements@";

        Map<String, String> data = new HashMap<String, String>() {{
            put("header", "<sup><sup>*Changelog generated by [Shipkit Changelog Gradle Plugin](https://github.com/shipkit/org.shipkit.shipkit-changelog)*</sup></sup>");
            put("version", version);
            put("date", formatDate(new Date()));
            put("commitCount", "" + commitCount);
            put("repoUrl", gitHubRepoUrl);
            put("previousRev", previousRev);
            put("newRev", newRev);
            put("contributors", String.join(", ", contributors));
            put("improvements", String.join("", improvements.stream().map(ChangelogFormat::formatImprovement).collect(Collectors.toList())));
        }};

        //- Update javadoc - remove deprecated class [(#1938)](https://github.com/mockito/mockito/pull/1938)

        return replaceTokens(template, data);
    }

    private static String formatImprovement(Improvement i) {
        return " - " + i.getTitle() +
                " [(#" + i.getId() + ")](" +
                i.getUrl() + ")\n";
    }

    private static String replaceTokens(String text,
                                       Map<String, String> replacements) {
        Pattern pattern = Pattern.compile("@(.+?)@");
        Matcher matcher = pattern.matcher(text);
        StringBuffer buffer = new StringBuffer();

        while (matcher.find()) {
            String replacement = replacements.get(matcher.group(1));
            if (replacement != null) {
                matcher.appendReplacement(buffer, "");
                buffer.append(replacement);
            }
        }
        matcher.appendTail(buffer);
        return buffer.toString();
    }
}
